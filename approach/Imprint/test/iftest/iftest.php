<?php
namespace Approach\Imprint\test/iftest;
use \Approach\Render as ProjectRender;
use \Approach\Render;
	
	/**
	* This class was generated by Approach\Imprint::Mint()
	* It can be used to create a new Render tree based on the original Pattern
	*/
	class iftest extends Render\Node
	{
	public static array $tokens = [
		'false_token','true_token'
	];
	public array $token_nodes = [];
	
	public function __construct(array $tokens = [])
	{
		$Node_0 = new Render\Node( );
	// Instantiating ifNode_0__condition for upcoming condition assignment
		$ifNode_0__condition = $this->token_nodes['false_token'] = new Render\Token( name : 'false_token' );

	$Node_0[] = $ifNode_0 = new Render\ifNode( condition: $ifNode_0__condition );
		// Instantiating HTML_0__classes for upcoming classes assignment
			$HTML_0__classes = new Render\Node( );
				$HTML_0__classes[] = $Attribute_0 = new Render\Attribute( );


		// Instantiating HTML_0__attributes for upcoming attributes assignment
			$HTML_0__attributes = new Render\Attribute( );

		$ifNode_0[] = $HTML_0 = new Render\HTML( tag : 'div', classes: $HTML_0__classes, attributes: $HTML_0__attributes, content : 'I should not be rendered' );

	// Instantiating HTML_1__classes for upcoming classes assignment
		$HTML_1__classes = new Render\Node( );
			$HTML_1__classes[] = $Attribute_2 = new Render\Attribute( );


	// Instantiating HTML_1__attributes for upcoming attributes assignment
		$HTML_1__attributes = new Render\Attribute( );

	$Node_0[] = $HTML_1 = new Render\HTML( tag : 'div', classes: $HTML_1__classes, attributes: $HTML_1__attributes );
		// Instantiating ifNode_1__condition for upcoming condition assignment
			$ifNode_1__condition = $this->token_nodes['true_token'] = new Render\Token( name : 'true_token' );

		$HTML_1[] = $ifNode_1 = new Render\ifNode( content : 'I should be rendered', condition: $ifNode_1__condition );



		foreach($tokens as $key => $value){
			$this->token_nodes[$key]->content = $tokens[$key];
		}
		$this->nodes[] = $Node_0;
	}
}
