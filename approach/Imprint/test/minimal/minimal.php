<?php
namespace Approach\Imprint\test/minimal;
use \Approach\Render as ProjectRender;
use \Approach\Render;
	
	/**
	* This class was generated by Approach\Imprint::Mint()
	* It can be used to create a new Render tree based on the original Pattern
	*/
	class minimal extends Render\Node
	{
	public static array $tokens = [
		'A'
	];
	public array $token_nodes = [];
	
	public function __construct(array $tokens = [])
	{
		$Node_0 = new Render\Node( );
	// Instantiating HTML_0__classes for upcoming classes assignment
		$HTML_0__classes = new Render\Node( );
			$HTML_0__classes[] = $Attribute_0 = new Render\Attribute( );


	// Instantiating HTML_0__attributes for upcoming attributes assignment
		$HTML_0__attributes = new Render\Attribute( );

	// Instantiating HTML_0__content for upcoming content assignment
		$HTML_0__content = $this->token_nodes['A'] = new Render\Token( name : 'A' );

	$Node_0[] = $HTML_0 = new Render\HTML( tag : 'div', classes: $HTML_0__classes, attributes: $HTML_0__attributes, content: $HTML_0__content );


		foreach($tokens as $key => $value){
			$this->token_nodes[$key]->content = $tokens[$key];
		}
		$this->nodes[] = $Node_0;
	}
}
